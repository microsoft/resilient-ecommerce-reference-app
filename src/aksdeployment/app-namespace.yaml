kind: Namespace
apiVersion: v1
metadata:
  name: app
  labels:
    name: app
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    azure.workload.identity/client-id: $CLIENT_ID
  name: workload
  namespace: app
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: app-secrets-provider
  namespace: app
spec:
  provider: azure
  secretObjects:
  - data:
    - key: azure-sql-endpoint
      objectName: azure-sql-endpoint
    - key: sql-app-database-name
      objectName: sql-app-database-name
    - key: app-insights-connection-string    
      objectName: app-insights-connection-string
    - key: redis-endpoint
      objectName: redis-endpoint
    secretName: webapp-secret
    type: Opaque             
  parameters:
    usePodIdentity: "false"
    clientID: "${USER_ASSIGNED_CLIENT_ID}"
    keyvaultName: ${KEYVAULT_NAME}
    cloudName: ""
    objects:  |
      array:
        - |
          objectName: azure-sql-endpoint
          objectType: secret
          objectVersion: ""               # [OPTIONAL] object versions, default to latest if empty
        - |
          objectName: sql-app-database-name
          objectType: secret
          objectVersion: ""
        - |
          objectName: app-insights-connection-string
          objectType: secret
          objectVersion: ""
        - |
          objectName: redis-endpoint
          objectType: secret
          objectVersion: ""
    tenantId: "${IDENTITY_TENANT}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-webapp  
  namespace: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-webapp
  template:
    metadata:
      labels:
        app: api-webapp
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: workload
      nodeSelector:
        agentpool: user
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: api-webapp
        - maxSkew: 1
          topologyKey: kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: api-webapp
      containers:
      - name: api-webapp
        image: $ACR_URI/api-webapp:latest
        resources:
          requests:
            memory: "5Gi"
          limits:
            memory: "5Gi"
        envFrom:
        - configMapRef:
            name: web-app-config
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /api/live
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/live
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 20
        volumeMounts:
        - name: secrets-store01-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        env:
        - name: APPLICATIONINSIGHTS_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: webapp-secret
              key: app-insights-connection-string
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: MY_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: SQL_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: webapp-secret
              key: azure-sql-endpoint
        - name: SQL_APP_DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: webapp-secret
              key: sql-app-database-name
        - name: REDIS_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: webapp-secret
              key: redis-endpoint
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "app-secrets-provider"
---
apiVersion: v1
kind: Service
metadata:
  name: api-webapp  
  namespace: app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: api-webapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-webapp
  namespace: app
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api-webapp
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-app-config
  namespace: app
data:
  DATABASE_CLEANUP_ENABLED: "true"
  DATABASE_CLEANUP_RECORD_COUNT: "1000"
  DATABASE_CLEANUP_THRESHOLD_MINUTES: "30"
  RPOL_CONNECT_RETRY: "3"
  RPOL_BACKOFF_DELTA: "500"
  Logging__LogLevel__OrderClient__Controllers__OrdersController: "Information"
  Logging__LogLevel__OrderClient__Controllers__UserController: "Information"
